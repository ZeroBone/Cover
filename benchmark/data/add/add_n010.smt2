(declare-fun y_10 () Real)
(declare-fun y_9 () Real)
(declare-fun y_8 () Real)
(declare-fun y_7 () Real)
(declare-fun y_6 () Real)
(declare-fun y_5 () Real)
(declare-fun y_4 () Real)
(declare-fun y_3 () Real)
(declare-fun y_2 () Real)
(declare-fun y_1 () Real)
(declare-fun x () Real)
(assert (let ((a!1 (- (+ y_1 y_2 y_3 y_4 y_5 y_6 y_7 y_8 y_9 y_10) x)))
  (and (< a!1 0.0)
       (> a!1 (- 1.0))
       (or (= y_1 0.0) (= y_1 2.0))
       (or (= y_2 0.0) (= y_2 4.0))
       (or (= y_3 0.0) (= y_3 8.0))
       (or (= y_4 0.0) (= y_4 16.0))
       (or (= y_5 0.0) (= y_5 32.0))
       (or (= y_6 0.0) (= y_6 64.0))
       (or (= y_7 0.0) (= y_7 128.0))
       (or (= y_8 0.0) (= y_8 256.0))
       (or (= y_9 0.0) (= y_9 512.0))
       (or (= y_10 0.0) (= y_10 1024.0)))))
